{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 15,
            "metadata": {
                "description": "Display Name for the Virtual Machine"
            }
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_DS1_v2",
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "metadata": {
                "description": "VM Size/Type for the Virtual Machine (D2s_v3 recommended)"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "vnetPrefix": {
            "defaultValue": "10.0.0.0/16",
            "type": "string",
            "metadata": {
                "description": "Enter Virtual Network address prefix"
            }
        },
        "subnetPrefix": {
            "defaultValue": "10.0.0.0/24",
            "type": "string",
            "metadata": {
                "description": "Enter Subnet address prefix"
            }
        }
    },
    "variables": {
        "subnetName": "[concat(parameters('vmName'),'-subnet')]",
        "virtualNetworkName": "[concat(parameters('vmName'),'-vnet')]",
        "virtualNetworkId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('virtualNetworkId'),'/subnets/', variables('subnetName'))]",
        "networkSecurityGroup": "[concat(parameters('vmName'),'-nsg')]",
        "pipName": "[concat(parameters('vmName'), '-pip')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-03-01",
            "location": "[resourceGroup().location]",
            "name": "[variables('networkSecurityGroup')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Outbound_Any",
                        "properties": {
                            "description": "Outbound to any",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "Inbound_SSH_Any",
                        "properties": {
                            "description": "Inbound SSH from Any",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Inbound_HTTP_Any",
                        "properties": {
                            "description": "Inbound HTTP from Any",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2017-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroup'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('vmName'), '-pip')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "sku": {
              "name": "Basic"
            },
            "properties": {
              "publicIPAllocationMethod": "Dynamic",
              "publicIPAddressVersion": "IPv4"
            }
          },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-nic')]",
            "apiVersion": "2017-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('virtualNetworkName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(parameters('vmName'),'-ipconfig')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(parameters('vmName'),'-nic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName'),'-osDisk')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                          "storageAccountType": "Premium_LRS"
                        },
                        "caching": "ReadWrite"
                      }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),'-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('vmName'), '/NanoNodeInstall')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/ryan-froggatt/Nano/master/easynanonode-bootstrap.sh"
                    ],
                    "commandToExecute": "sh easynanonode-bootstrap.sh"
                }
            }
        }
    ]
}